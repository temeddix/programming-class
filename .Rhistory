knitr::opts_chunk$set(echo = TRUE)
Sys.setlocale('LC_ALL','C')
letters[1:10]
length(letters)
LETTERS[17:26] #대문자 알파벳 배열
LETTERS[22:24]
#또는
head(letters)
tail(LETTERS,10)
seq(0,1,by=0.1)
seq(0,1,by=0.1)
rep(1,10) # 1이 10번 반복된 sequence
rep(seq(1,3),3) # (1,2,3)이 3번 반복
a=seq(1,3)
rep(a,each=3) #(1,2,3)의 각 요소들이 각각 3번씩 반복
rep(a,c(2,1,3)) # 1은 2번, 2는 1번, 3은 3번 반복
rep(c("a","b"),2) #("a","b")를 2번 반복
var1<-c(1,2,3,4)
var2<-rep(var1,c(2,1,2,1))
var1<-c(1,2,3,4)
var2<-rep(var1,c(2,1,2,1))
var2
paste("a","b","c") #3개의 요소로 되어 있는 vector 문자들을 하나의 요소로 합침
paste("a","b","c",sep="") # 문자들 사이 space가 없게
paste0("a","b","c") # sep=""이 옵션이 디폴트인 paste
temp<-paste0(rep("x",3),1:3 ) #("x","x","x")에 (1,2,3)를 차례대로 연결
temp
length(temp) #temp 변수의 요소의 갯수 결
paste(letters,1:26,sep="") #소문자 알파벳 다음에 1~26를 연결
paste0(letters,1:26)
var1<-1:10
var2<-c("st","nd","rd","th")
var3<-paste0(var1,var2)
var3
var1<-1:10
var2<-c("st","nd","rd",rep("th",7))
var3<-paste0(var1,var2)
var3
10>3 # 10은 3보다 크므로 TRUE
3>10 #FALSE
a<-10
b<-1+9
a==b #a와 b 모두 10 으로 같음(==)  TRUE
a!=b # a와 b는 같지 않음(!=) 이 아니므로 FALSE
!TRUE #TRUE가 아님(!)은 FALSE
0.1+0.2==0.3 #부동소수점
a<-10
b<-1+9
a==b #a와 b 모두 10 으로 같음(==)  TRUE
a!=b # a와 b는 같지 않음(!=) 이 아니므로 FALSE
!TRUE #TRUE가 아님(!)은 FALSE
0.1+0.2==0.3 #부동소수점
10>3 # 10은 3보다 크므로 TRUE
3>10 #FALSE
a<-10
b<-1+9
10>3 & a==b # TRUE and TRUE 이므로 TRUE
3>10 & a==b # FALSE and TRUE 이므로 FALSE (and는 둘 중 하나라도 FALSE가 있으면 FALSE)
3>10 | a==b # FALSE or TRUE 이므로 TRUE (or은 둘중 하나가 TRUE이므로 TRUE)
knitr::opts_chunk$set(echo = TRUE)
Sys.setlocale('LC_ALL','C')
temp<-c(1,2,3,4,5)
temp
temp1<-c("a","b","c")
temp1
temp2<-c(temp,temp1)
temp2
temp2
temp2[1]
temp2[1:5]
temp2[-2] #index 2번째 해당하는 요소를 제외
temp2[-c(1,3)] #index 첫번째와 세번째 해당하는 요소를 제외
1:10 #1~10까지 정수
seq(from=1,10,by=1)
seq(10) #1~10까지 정수
seq(-2,5) # -2~5까지 정수
seq(0,10,by=2) #0~10까지 2씩 증가된 정수
seq(1,10,length=20) #1~10까지 20개의 sequence
seq(0.1, 0.9, by=0.01) # 0.1~0.9까지 0.01씩 증가
letters #소문자 알파벳 배열
LETTERS #대문자 알파벳 배열
letters[1:10]
length(letters)
LETTERS[17:26] #대문자 알파벳 배열
LETTERS[22:24]
#또는
head(letters)
tail(LETTERS,10)
seq(0,1,by=0.1)
rep(1,10) # 1이 10번 반복된 sequence
rep(seq(1,3),3) # (1,2,3)이 3번 반복
a=seq(1,3)
rep(a,each=3) #(1,2,3)의 각 요소들이 각각 3번씩 반복
rep(a,c(2,1,3)) # 1은 2번, 2는 1번, 3은 3번 반복
rep(c("a","b"),2) #("a","b")를 2번 반복
var1<-c(1,2,3,4)
var2<-rep(var1,c(2,1,2,1))
var2
paste("a","b","c") #3개의 요소로 되어 있는 vector 문자들을 하나의 요소로 합침
paste("a","b","c",sep="") # 문자들 사이 space가 없게
paste0("a","b","c") # sep=""이 옵션이 디폴트인 paste
temp<-paste0(rep("x",3),1:3 ) #("x","x","x")에 (1,2,3)를 차례대로 연결
temp
length(temp) #temp 변수의 요소의 갯수 결
paste(letters,1:26,sep="") #소문자 알파벳 다음에 1~26를 연결
paste0(letters,1:26)
var1<-1:10
var2<-c("st","nd","rd",rep("th",7))
var3<-paste0(var1,var2)
var3
10>3 # 10은 3보다 크므로 TRUE
3>10 #FALSE
a<-10
b<-1+9
a==b #a와 b 모두 10 으로 같음(==)  TRUE
a!=b # a와 b는 같지 않음(!=) 이 아니므로 FALSE
!TRUE #TRUE가 아님(!)은 FALSE
0.1+0.2==0.3 #부동소수점
a<-10
b<-1+9
10>3 & a==b # TRUE and TRUE 이므로 TRUE
3>10 & a==b # FALSE and TRUE 이므로 FALSE (and는 둘 중 하나라도 FALSE가 있으면 FALSE)
3>10 | a==b # FALSE or TRUE 이므로 TRUE (or은 둘중 하나가 TRUE이므로 TRUE)
a<-1:3  # a=c(1,2,3)
a==1 # 3개의 요소에서 1인 값은 TRUE
sum(a==1) # TRUE는 1, FALSE는 0을 반환하여 sum하면 1
var1<-1:10
var2=var1[var1%%2==0]
var2
a<- 1:10
a+3  # vector의 모든 요소에 3를 더함
a^2  # 제곱승
sqrt(a) #루트값
